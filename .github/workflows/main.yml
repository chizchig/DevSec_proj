name: Node.js Backend and React Frontend Deployment

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - name: Install backend dependencies
      working-directory: ./app/backend
      run: npm ci
    - name: Build backend
      working-directory: ./app/backend
      run: npm run build --if-present
    - name: Test backend
      working-directory: ./app/backend
      run: npm test || echo "No tests found for backend"

  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js for React
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - name: Install frontend dependencies
      working-directory: ./app/frontend
      run: |
        npm ci
        npm install react-scripts
    - name: Build React app
      working-directory: ./app/frontend
      run: CI=false npm run build
    - name: Test React app
      working-directory: ./app/frontend
      run: CI=true npm test -- --passWithNoTests || echo "No tests found for frontend"

    
    - name: Debug GitHub Context
      run: |
        echo "GitHub Actor: ${{ github.actor }}"
        echo "GitHub Repository: ${{ github.repository }}"
        echo "GitHub Ref: ${{ github.ref }}"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-east-1
        role-session-name: GitHubActions-${{github.run_id}}
        role-duration-seconds: 3600
        audience: sts.amazonaws.com

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
  
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: dev_sec
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Move to the directory containing the Dockerfile
        cd ${{ github.workspace }}
        # Build the Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # Push the image to ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG